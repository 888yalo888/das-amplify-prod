enum Vibes {
  ATEASE
  ANGRY
  SAD
  HAPPY
}

type Vibe @model @auth(rules: [{allow: public}]) {
  id: ID!
  checkInVibe: Vibes
  checkOutVibe: Vibes
  checkInTime: AWSDateTime
  checkOutTime: AWSDateTime
  youthID: ID! @index(name: "byYouth")
  site: Site! @hasOne
}

enum Grade {
  KINDERGARTEN
  FIRST
  SECOND
  THIRD
  FOURTH
  FIFTH
  SIXTH
  SEVENTH
  EIGHTH
  NINTH
  TENTH
  ELEVENTH
  TWELFTH
}

type Youth @model @auth(rules: [{allow: public}]) {
  id: ID!
  fullName: String
  createdDate: AWSDateTime
  dateOfBirth: AWSDate
  guardianFullName: String
  guardianPhoneNumber: AWSPhone
  grade: Grade
  gender: String
  status: Status
  site: [Site!] @manyToMany(relationName: "YouthSite")
  vibes: [Vibe] @hasMany(indexName: "byYouth", fields: ["id"])
}

type ProgramManager @model @auth(rules: [{allow: public}]) {
  id: ID!
  fullName: String
  createdDate: AWSDateTime
  email: AWSEmail
  status: Status
  AssignedTo: [Site] @manyToMany(relationName: "ProgramManagerSite")
}

enum Status {
  ACTIVE
  ARCHIVED
}

type Site @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  createdDate: AWSDateTime
  address: String
  phoneNumber: AWSPhone
  siteAdminName: String
  siteAdminEmail: AWSEmail
  status: Status
  ManagedBy: [ProgramManager] @manyToMany(relationName: "ProgramManagerSite")
  AttendedBy: [Youth] @manyToMany(relationName: "YouthSite")
}
 